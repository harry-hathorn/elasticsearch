---
"search with query_string parameters":
  - do:
      indices.create:
          index:  test
          body:
            mappings:
              properties:
                number:
                  type: integer

  - do:
      index:
          index:  test
          id:     1
          body:   { field: foo bar}

  - do:
      indices.refresh:
        index: [test]

  - do:
      search:
        rest_total_hits_as_int: true
        index: test
        q: bar
        df: field

  - match: {hits.total: 1}

  - do:
      search:
        rest_total_hits_as_int: true
        index: test
        q: field:foo field:xyz

  - match: {hits.total: 1}

  - do:
      search:
        rest_total_hits_as_int: true
        index: test
        q: field:foo field:xyz
        default_operator: AND

  - match: {hits.total: 0}

  - do:
      search:
        rest_total_hits_as_int: true
        index: test
        q: field:BA*

  - match: {hits.total: 1}

  - do:
      search:
        rest_total_hits_as_int: true
        index: test
        q: number:foo
        lenient: true

  - match: {hits.total: 0}

---
"search on JSON field":
  - skip:
      version: " - 6.99.99"
      reason: "JSON fields are currently only implemented in 7.0."

  - do:
      indices.create:
        index:  test
        body:
          mappings:
            properties:
              headers:
                type: json

  - do:
      index:
        index:  test
        id:     1
        body:
          headers:
            content-type: application/javascript
            origin: elastic.co
        refresh: true

  - do:
      index:
        index:  test
        id:     2
        body:
          headers:
            content-type: text/plain
            origin: elastic.co
        refresh: true

  - do:
      search:
        index: test
        body:
          query:
            query_string:
              query: "headers:text\\/plain"

  - match: { hits.total.value: 1 }
  - length: { hits.hits: 1 }
  - match: { hits.hits.0._id: "2" }

  - do:
      search:
        index: test
        body:
          query:
            query_string:
              query: "application\\/javascript AND headers.origin:elastic.co"

  - match: { hits.total.value: 1 }
  - length: { hits.hits: 1 }
  - match: { hits.hits.0._id: "1" }
